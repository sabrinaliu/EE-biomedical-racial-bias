{"version":3,"sources":["static/spiro_test.webp","static/spirometer_display.jpg","content_components/Spirometer.js","content_components/RaceCorrection.js","content_components/History.js","content_components/Solutions.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Spirometer","className","Typography","variant","Card","id","CardContent","component","Link","href","CardMedia","alt","image","require","title","RaceCorrection","History","React","useState","activeStep","setActiveStep","steps","Stepper","nonLinear","orientation","map","label","index","Step","key","StepButton","onClick","step","StepContent","getStepContent","Solutions","App","pages","ref","offset","speed","style","alignContent","backgroundColor","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.df084b96.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spiro_test.368ed67b.webp\";","module.exports = __webpack_public_path__ + \"static/media/spirometer_display.64abba44.jpg\";","import React from 'react';\nimport { Card, CardContent, CardMedia, Typography, Link } from '@material-ui/core/';\n\nfunction Spirometer() {\n  return (\n    <div className=\"background-style\">\n      <Typography className=\"title\" variant=\"h3\">What is spirometry?</Typography>\n      <Card id=\"spiro-card\">\n        <CardContent id=\"spiro-text\">\n          <Typography variant=\"body1\" component=\"p\">\n              <Link href=\"https://www.mayoclinic.org/tests-procedures/spirometry/about/pac-20385201\">Spirometry</Link> is a clinical test used by physicians to assess the respiratory health of a patient by measuring inhalation and exhalation speed and exhalation volume. By comparing these measurements to set standards, doctors can use the results to diagnose a patient with chronic lung conditions, like asthma, COPD, or pulmonary fibrosis, or use it as a monitoring tool before surgeries or at a regular check-up.\n          </Typography>\n        </CardContent>\n\n        <CardMedia\n          component=\"img\"\n          alt=\"Spirometer\"\n          image={require(\"../static/spiro_test.webp\")}\n          title=\"Spirometer\"\n        />\n      </Card>\n    </div>\n  );\n}\n\nexport default Spirometer;\n","import React from 'react';\nimport { Card, CardContent, CardMedia, Typography, Link } from '@material-ui/core/';\n\nfunction RaceCorrection() {\n  return (\n        <div className=\"background-style\" id=\"race-correction\">\n          <Typography className=\"title\" variant=\"h3\">The Race Correction Factor</Typography>\n          <Card id=\"spiro-card\">\n            <CardMedia\n              component=\"img\"\n              alt=\"Spirometer\"\n              image={require(\"../static/spirometer_display.jpg\")}\n              title=\"Spirometer\"\n            />\n            <CardContent id=\"spiro-text\">\n              <Typography variant=\"body1\" component=\"p\">\n              What is considered a standard result for an individual can vary greatly. Digital spirometers will often ask physicians to input information about the patient before the test begins. These involve factors like age, gender, height, weight, and also race.</Typography>\n              <Typography variant=\"body1\" component=\"p\">\n              There has not been no identified genetic factor that would suggest inherent differences in lung capacity between races. In addition, it can be imprecise as physicians often just eyeball it instead of directly asking their patients. However, the \"racial correction factor\" leads to very different standards depending on the person. <Link href=\"https://journals.physiology.org/doi/full/10.1152/advan.00196.2017\">In the U.S., spirometers set the standard for a \"normal\" spirometer result in African Americans to be 10-15% lower and in Asians to be 4% lower than that of Caucasians</Link>.\n              </Typography>\n              <Typography variant=\"body1\" component=\"p\">\n              As a result, given two individuals who have all the same attributes - same gender, weight, height - but one is African American and one is Caucasian, even if they have the same lung capacity, it is possible for the Black individual to walk out of the doctor's office and be classified as healthy while the white individual may be deemed ill, leading to the latter receiving more medical care. Spirometry is also an important test used in various <Link href=\"https://www.osha.gov/Publications/OSHA3637.pdf\">occupational health checks</Link>. Looking at solely asbestos trust funds, <Link href=\"https://www.mesotheliomagroup.com/paying-for-treatment/asbestos-trust-funds/\">3.3 million claims have been filed since they began in 1988, translating to $17.5 billion of compensation paid to workers</Link>. The race correction factor can directly lead to bias in who receives such compensation.\n              </Typography>\n            </CardContent>\n          </Card>\n        </div>\n\n  );\n}\n\nexport default RaceCorrection;\n","import React from 'react';\nimport { Stepper, Step, StepContent, StepButton } from '@material-ui/core/';\nimport { Card, CardContent, Typography, Link } from '@material-ui/core/';\n\nfunction getSteps() {\n  return ['1832', '1840\\'s', '1851', '1897', '1922', '1974', '2014', '2019'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return (\n        <Typography>\n        The idea of different races having inherently varying lung capacities is older than the spirometer itself. Before the device was developed, Thomas Jefferson mentioned various physical differences, including in the lungs, between slaves and colonists in his <i>Notes on the State of Virginia</i>.\n        </Typography>);\n    case 1:\n      return (\n        <Typography>\n        John Hutchinson invents the modern spirometer. Quickly, he runs into the problem of how to set a standard for the measurements. He notes variations in lung capacity caused by weight and height. However, he ends up focusing on the effects of occupational differences.\n        </Typography>);\n    case 2:\n      return (\n        <Typography>\n        Physician and slave owner Samuel Cartwright documents racial differences using the spirometer. He uses his results to justify slavery, stating that extra physical work is good for health and will strengthen slaves' lungs.\n        </Typography>);\n    case 3:\n      return (\n        <Typography>\n        W.E.B. Du Bois, Kelly Miller, and other Black scholars critique studies that argue lung capacity and other physical differences show racial inferiority. Still, they are largely ignored as the large majority of studies confirm racial differences in lung capacity.\n        </Typography>);\n    case 4:\n      return (\n        <Typography>\n        M.G. Wilson and D.J. Edwards publish the first set of spirometry standards for different races. Three years later, J.E. Meyers publishes a handbook to be used in clinical practice that states racial lung differences undoubtingly.\n        </Typography>);\n    case 5:\n      return (\n        <Typography>\n        As the spirometer becomes more advanced and computerized, Charles Rossiter and Hans Weill develop the racial “scaling factor” to be programmed directly into the spirometer. Physicians no longer need to understand why they are supposed to ask for racial data when conducting spirometry tests.\n        </Typography>);\n    case 6:\n      return (\n        <Typography>\n        Lundy Braun, Professor of Medical Science and Africana Studies at Brown University, publishes <i>Breathing Race into the Machine: The Surprising Career of the Spirometer from Plantation to Genetics</i>. Her work investigates the history of the spirometer and the racial correction factor, bringing widespread attention to its problematic origins and its effects today.\n        </Typography>);\n    case 7:\n      return (\n      <Typography>\n      In the <Link href=\"https://www.atsjournals.org/doi/full/10.1164/rccm.201908-1590ST\"><i>Standardization of Spirometry 2019 Update</i></Link> from the Official American Thoracic Society and the European Respiratory Society, it states that \"ethnicity should be included in the patient information on the spirometry request. Otherwise, the operator will ask the patient to provide this information.\" The standard for ethnic categories has been limited to \"white (i.e., European ancestry), African American, Northeast Asian, Southeast Asian, and other/mixed\". This information is still used in calculations and if no race information is provided, then physicians are asked to make sure they note what default values they used.\n      </Typography>);\n    default:\n      return (<Typography>Something is wrong...</Typography>);\n  }\n}\n\nexport default function History() {\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const handleStep = (step: number) => () => {\n    setActiveStep(step);\n  };\n\n  return (\n    <div className=\"background-style\" id=\"race-correction\">\n      <Typography className=\"title\" variant=\"h3\">History</Typography>\n      <Card id=\"spiro-card\">\n      <CardContent id=\"spiro-text\">\n        <Typography variant=\"subtitle1\" component=\"p\">\n          Understanding the origins of the race correction factor involves looking at its <Link href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4631137/\">history originating centuries back in the slave era</Link>.\n        </Typography>\n        <Stepper nonLinear activeStep={activeStep} orientation=\"vertical\">\n          {steps.map((label, index) => (\n            <Step key={label}>\n              <StepButton onClick={handleStep(index)}>\n              <Typography variant=\"subtitle1\">\n              {label}\n              </Typography>\n              </StepButton>\n              <StepContent>\n                {getStepContent(index)}\n              </StepContent>\n            </Step>\n          ))}\n        </Stepper>\n\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Card, CardContent, Typography, Link } from '@material-ui/core/';\n\nfunction Solutions() {\n  return (\n        <div className=\"background-style\" id=\"race-correction\">\n          <Typography className=\"title\" variant=\"h3\">Lessons Learned and Moving Forward</Typography>\n          <Card id=\"spiro-card\">\n            <CardContent id=\"spiro-text\">\n              <Typography variant=\"body1\" component=\"p\">\n              Unfortunately, the bias found in spirometers is not unique. There are many other cases of racial biases found in other biomedical devices, as well as other medical treatments. However, this device and its history does point towards potential solutions:\n\n                <ul>\n                  <li>\n                  First and foremost, <b>the spirometer is often used as a cautionary tale against relying too heavily on race-based medicine</b>. In this particular case, lung capacity can be dramatically affected by ones environment, specifically the air pollution levels where individuals live. As has been seen multiple times in history, race serves again as a proxy for socioeconomic gaps, here marked by lower air quality in poorer neighborhoods. It reminds us that having diverse clinical trials and collecting racial data is important -- it is impossible to address these societal issues without first knowing about them, <Link href=\"https://www.nytimes.com/interactive/2020/07/05/us/coronavirus-latinos-african-americans-cdc-data.html\">as can be seen with the current pandemic</Link>. However, while we collect such information, it is important to remember to look for these systemic issues instead of accepting genetics as the source of all problems.\n                  </li>\n\n                  <li>\n                  Along spirometry's history, there were individuals that raised suspicion about the race correction factor, even though their concerns were not addressed. <b>This highlights the need for ensuring meaningful diversity in the engineers and physicians developing biomedical devices</b>. While it is a first step to have members from various backgrounds present at the decision table, all individuals need to be open-minded and take input, no matter who it is from, seriously.\n                  </li>\n\n                  <li>\n                  It is important to note that the perpetuation of the usage of the race correction factor by clinicians largely comes from ignorance, not malice. For a current physician or engineer who may be faced with the next spirometer, it can be difficult to identify such racial biases, especially when they are presented as longstanding, well-established standards. However, <b>by incorporating classes in ethnic studies and history, among other subjects, in the curriculum of medical professionals and biomedical engineers</b> can provide context in which various devices were designed and encourage critical thinking about similar issues.\n                  </li>\n\n                  <li>\n                  For the spirometer and many other devices that have already reached the consumer, it can be difficult to encourage change. The development cycle for biomedical technology is relatively slow due to the large number of safety approvals before reaching the public. Therefore, <Link href=\"https://healthvoices.org.au/issues/november-2017/ethics-advanced-medical-devices-need-new-approach/\">many researchers allocate significant resources to designing and improving new devices but few focus on the post-release</Link>. <b>By having national medical and government organizations implement and fund a system for vetting and reassessing devices on the market for equity and effectiveness at regular time intervals</b> will help make sure that such biases do not go unchecked. If problems are pinpointed, a deadline needs to be set for the issue to be resolved and products to be redesigned and released. Spending funds on such an initiative will preserve the quality of biomedical devices even as the field continues to adapt and grow.\n                  </li>\n\n                </ul>\n              </Typography>\n            </CardContent>\n          </Card>\n        </div>\n\n  );\n}\n\nexport default Solutions;\n","import React from 'react';\nimport { Parallax, ParallaxLayer } from 'react-spring/renderprops-addons'\nimport { Card, CardContent, Typography } from '@material-ui/core/';\nimport Spirometer from './content_components/Spirometer';\nimport RaceCorrection from './content_components/RaceCorrection';\nimport History from './content_components/History';\nimport Solutions from './content_components/Solutions';\nimport './App.css';\n\nfunction App() {\n  let parallax;\n\n  return (\n    <div className=\"App background-style\">\n    <Parallax pages={5} ref={ref => parallax = ref}>\n      <ParallaxLayer offset={.3} speed={8} style={{alignContent:\"center\"}}>\n        <Card className=\"space-left-border\" style={{backgroundColor: \"black\"}}>\n          <Typography className=\"title\" variant=\"h2\">Racial Bias in Biomedical Devices</Typography>\n          <CardContent>\n          <Typography className=\"intro-desc\" variant=\"subtitle1\">\n          Recent news reports often discuss racial biases in medical care, from the interactions between patient and physicians to the machine learning algorithms used to diagnose individuals. These issues have been furthered noticed with the recent pandemic as well as the growing trend as more technology is incorporated into hospitals. Biomedical devices are no exception.\n          </Typography>\n          <Typography className=\"intro-desc\" variant=\"subtitle1\">\n          In trying to understand how these biases can be built into these devices, the spirometer and the race correction factor serves as a case study that can show how the problem can be addressed in these devices in general.\n          </Typography>\n          </CardContent>\n        </Card>\n      </ParallaxLayer>\n\n      <ParallaxLayer offset={1} speed={.5}>\n        <Spirometer />\n      </ParallaxLayer>\n\n      <ParallaxLayer offset={2} speed={0}>\n        <RaceCorrection />\n      </ParallaxLayer>\n\n      <ParallaxLayer offset={3} speed={.5}>\n        <History />\n      </ParallaxLayer>\n\n      <ParallaxLayer offset={4.05} speed={0}>\n        <Solutions />\n      </ParallaxLayer>\n    </Parallax>\n\n\n    </div>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}